@page "/signup"
@inject FirebaseAuthService AuthService
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlert

    <div class="card text-center">
        <div class="card-header">
            Registro
        </div>
        <div class="card-body">
            <form>
                <div class="form-group mb-2">
                    <label class="form-label" for="Nombre">User:</label>
                    <InputText id="Nombre" class="form-control" @bind-Value="name" />
                </div>

                <div class="form-group mb-2">
                <label class="form-label" for="Email">Email:</label>
                    <InputText id="email" class="form-control" @bind-Value="email" />
                </div>

                <div class="form-group mb-2">
                <label class="form-label" for="Password">Password:</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="password" />
                </div>

                <div class="form-group mb-2">
                <label class="form-label" for="PasswordVerify">Verify password:</label>
                <InputText id="passwordVerify" type="password" class="form-control" @bind-Value="passwordVerify" />
                </div>

                <button type="button" @onclick="Register" class="btn btn-primary mb-2">Submit</button>
            </form>
        </div>
        <div class="card-footer text-body-secondary">
            Kiosco Informático
        </div>
    </div>

@code {
    private string name;
    private string email;
    private string password;
    private string passwordVerify;

    private async Task Register()
    {
        if (password != passwordVerify)
        {
            await SweetAlert.FireAsync("Error", "Las contraseñas no coinciden", SweetAlertIcon.Error);
            return;
        }

        var userId = await AuthService.createUserWithEmailAndPassword(email, password, name);
        if (userId != null)
        {
            await SweetAlert.FireAsync("Success", "Usuario creado correctamente", SweetAlertIcon.Success);
            NavigationManager.NavigateTo($"/");
        }
        else
        {
            await SweetAlert.FireAsync("Error", "Error al crear el usuario", SweetAlertIcon.Error);
        }

        StateHasChanged();
    }
}
